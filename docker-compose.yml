services:
  # Go Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: steganography-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - OUTPUT_DIR=./output
      - GIN_MODE=release
    volumes:
      # Persist output files
      - backend_output:/root/output
    networks:
      - steganography-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/v1/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # React Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: steganography-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - steganography-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

# Named volumes for data persistence
volumes:
  backend_output:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-volumes/backend-output

# Custom network for inter-service communication
networks:
  steganography-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


